name: Build toolchain for linux
on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install crosstool-NG dependencies
      run: |
        sudo apt-get update
        sudo apt-get install gcc g++ gperf bison flex texinfo help2man make libncurses5-dev \
        python3-dev autoconf automake libtool libtool-bin gawk wget bzip2 xz-utils unzip \
        patch libstdc++6 rsync git meson ninja-build

    - name: Get ct-ng hash
      id: ct-hash
      run: 
        echo "hash=`git ls-remote https://github.com/DolphinGui/crosstool-ng.git refs/heads/avr-exceptions | awk '{print $1;}'`" >> "$GITHUB_OUTPUT"

    - name: Cache crosstool-NG
      id: ct-cache
      uses: actions/cache@v4
      with:
        path: |
          ./ctroot
          ./crosstool-ng
          ./ctbuild
        key: ${{ steps.ct-hash.outputs.hash }}

    - name: Get crosstool-NG
      if: ${{ steps.ct-cache.outputs.cache-hit != 'true' }}
      run: .github/scripts/ct-ng.sh
      
    - name: Append ct-ng to path
      run: echo `realpath ./ctroot/bin` >> "$GITHUB_PATH"

    
    - name: Calculate dependency hashes
      id: dep-hash
      run: .github/scripts/hash-deps.sh >> "$GITHUB_OUTPUT"

  
    - name: Cache linux build
      id: linux-cache
      uses: actions/cache@v4
      with:
        path: |
          ./linux-build/root
        key: ${{ steps.dep-hash.outputs.hash }}

    - name: Build linux
      if: ${{ steps.linux-cache.outputs.cache-hit != 'true' }}
      run: .github/scripts/build-linux.sh

    - name: Upload logs
      if: ${{ always() }} # upload logs even on failure
      uses: actions/upload-artifact@v4
      with:
        name: build.log
        path: linux-build/build.log

    - name: Upload archive
      uses: actions/upload-artifact@v4
      with:
        name: root.tar
        path: linux-build/root