name: Build avr-gcc

on:
  push:

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Install compression software
        run: sudo apt-get install -y tar pixz

      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: avr-build:latest
          outputs: type=docker,dest=/tmp/avr-build.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: avr-build
          path: /tmp/avr-build.tar
          retention-days: 1
          compression-level: 0
  build-linux:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: avr-build
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/avr-build.tar
          rm /tmp/avr-build.tar
      
      - name: Build linux toolchain
        run : |
          mkdir -p /tmp/out
          docker run --rm --mount type=bind,src=/tmp/out,dst=/out --env HOST avr-build:latest bash avr.sh /out/root
          ls /tmp/out
        env:
          HOST: x86_64-pc-linux-gnu

      - name: Compress linux build
        run: tar -Ipixz -cf root.tar.xz /tmp/out/root 

      - name: Upload linux build
        uses: actions/upload-artifact@v4
        with:
          name: root.tar.xz
          path: root.tar.xz
          compression-level: 0

      - name: Compress base build
        run: tar -Ipixz -cf baseroot.tar.xz /tmp/out/baseroot

      - name: Upload base root
        uses: actions/upload-artifact@v4
        with:
          name: baseroot
          path: /tmp/out/baseroot
          compression-level: 0

  build-windows:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Install compression software
        run: sudo apt-get install -y tar pixz

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: avr-build
          path: /tmp

      - name: Download base root
        uses: actions/download-artifact@v4
        with:
          name: baseroot
          path: /tmp/out

      - name: Decompress base root
        run: tar -Ipixz -xf /tmp/out/baseroot.tar.xz && rm /tmp/out/baseroot.tar.xz

      - name: Download AVR toolchain
        uses: actions/download-artifact@v4
        with:
          name: root
          path: /avr
      
      - name: Decompress toolchain
        run: tar -Ipixz -xf /avr/root.tar.xz && rm /avr/root.tar.xz
          
      - name: Load image
        run: |
          docker load --input /tmp/avr-build.tar
          rm /tmp/avr-build.tar

      - name: Build windows toolchain
        run : |
          mkdir -p /tmp/out
          docker run --rm --mount type=bind,src=/tmp/out,dst=/out --mount type=bind,src=/avr/root,dst=/avr \
            --env HOST --env HOSTFLAG --env CC --env CXX avr-build:latest bash avr.sh /out/root
          ls /tmp/out
        env:
          HOST: x86_64-w64-mingw32
          HOSTFLAG: "--host=x86_64-w64-mingw32"
          CC: "x86_64-w64-mingw32-gcc"
          CXX: "x86_64-w64-mingw32-g++"
